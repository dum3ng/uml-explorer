{
"version":3,
"file":"module$node_modules$fast_xml_parser$src$node2json_str.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/fast-xml-parser/src/node2json_str.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fast_xml_parser$src$node2json_str\"] = function(global,require,module,exports) {\n'use strict';\n\nconst util = require('./util');\nconst buildOptions = require('./util').buildOptions;\nconst x2j = require('./xmlstr2xmlnode');\n\n//TODO: do it later\nconst convertToJsonString = function(node, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n\n  options.indentBy = options.indentBy || '';\n  return _cToJsonStr(node, options, 0);\n};\n\nconst _cToJsonStr = function(node, options, level) {\n  let jObj = '{';\n\n  //traver through all the children\n  const keys = Object.keys(node.child);\n\n  for (let index = 0; index < keys.length; index++) {\n    var tagname = keys[index];\n    if (node.child[tagname] && node.child[tagname].length > 1) {\n      jObj += '\"' + tagname + '\" : [ ';\n      for (var tag in node.child[tagname]) {\n        jObj += _cToJsonStr(node.child[tagname][tag], options) + ' , ';\n      }\n      jObj = jObj.substr(0, jObj.length - 1) + ' ] '; //remove extra comma in last\n    } else {\n      jObj += '\"' + tagname + '\" : ' + _cToJsonStr(node.child[tagname][0], options) + ' ,';\n    }\n  }\n  util.merge(jObj, node.attrsMap);\n  //add attrsMap as new children\n  if (util.isEmptyObject(jObj)) {\n    return util.isExist(node.val) ? node.val : '';\n  } else {\n    if (util.isExist(node.val)) {\n      if (!(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n        jObj += '\"' + options.textNodeName + '\" : ' + stringval(node.val);\n      }\n    }\n  }\n  //add value\n  if (jObj[jObj.length - 1] === ',') {\n    jObj = jObj.substr(0, jObj.length - 2);\n  }\n  return jObj + '}';\n};\n\nfunction stringval(v) {\n  if (v === true || v === false || !isNaN(v)) {\n    return v;\n  } else {\n    return '\"' + v + '\"';\n  }\n}\n\nfunction indentate(options, level) {\n  return options.indentBy.repeat(level);\n}\n\nexports.convertToJsonString = convertToJsonString;\n\n};"],
"names":["shadow$provide","global","require","module","exports","util","buildOptions","x2j","_cToJsonStr","node","options","level","jObj","keys","Object","child","index","length","tagname","tag","substr","merge","attrsMap","isEmptyObject","isExist","val","cdataPositionChar","textNodeName","v","isNaN","convertToJsonString","defaultOptions","props","indentBy"]
}
