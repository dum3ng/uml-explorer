{
"version":3,
"file":"module$node_modules$fast_xml_parser$src$node2json.js",
"lineCount":3,
"mappings":"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",
"sources":["node_modules/fast-xml-parser/src/node2json.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fast_xml_parser$src$node2json\"] = function(global,require,module,exports) {\n'use strict';\n\nconst util = require('./util');\n\nconst convertToJson = function(node, options, parentTagName) {\n  const jObj = {};\n\n  // when no child node or attr is present\n  if ((!node.child || util.isEmptyObject(node.child)) && (!node.attrsMap || util.isEmptyObject(node.attrsMap))) {\n    return util.isExist(node.val) ? node.val : '';\n  }\n\n  // otherwise create a textnode if node has some text\n  if (util.isExist(node.val) && !(typeof node.val === 'string' && (node.val === '' || node.val === options.cdataPositionChar))) {\n    const asArray = util.isTagNameInArrayMode(node.tagname, options.arrayMode, parentTagName)\n    jObj[options.textNodeName] = asArray ? [node.val] : node.val;\n  }\n\n  util.merge(jObj, node.attrsMap, options.arrayMode);\n\n  const keys = Object.keys(node.child);\n  for (let index = 0; index < keys.length; index++) {\n    const tagName = keys[index];\n    if (node.child[tagName] && node.child[tagName].length > 1) {\n      jObj[tagName] = [];\n      for (let tag in node.child[tagName]) {\n        if (node.child[tagName].hasOwnProperty(tag)) {\n          jObj[tagName].push(convertToJson(node.child[tagName][tag], options, tagName));\n        }\n      }\n    } else {\n      const result = convertToJson(node.child[tagName][0], options, tagName);\n      const asArray = (options.arrayMode === true && typeof result === 'object') || util.isTagNameInArrayMode(tagName, options.arrayMode, parentTagName);\n      jObj[tagName] = asArray ? [result] : result;\n    }\n  }\n\n  //add value\n  return jObj;\n};\n\nexports.convertToJson = convertToJson;\n\n};"],
"names":["shadow$provide","global","require","module","exports","util","convertToJson","node","options","parentTagName","jObj","child","isEmptyObject","attrsMap","isExist","val","cdataPositionChar","asArray","isTagNameInArrayMode","tagname","arrayMode","textNodeName","merge","keys","Object","index","length","tagName","tag","hasOwnProperty","push","result"]
}
