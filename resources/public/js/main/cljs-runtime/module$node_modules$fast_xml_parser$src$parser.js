shadow$provide.module$node_modules$fast_xml_parser$src$parser=function(global,require,module,exports){const nodeToJson=require("module$node_modules$fast_xml_parser$src$node2json"),xmlToNodeobj=require("module$node_modules$fast_xml_parser$src$xmlstr2xmlnode"),x2xmlnode=require("module$node_modules$fast_xml_parser$src$xmlstr2xmlnode"),buildOptions=require("module$node_modules$fast_xml_parser$src$util").buildOptions,validator=require("module$node_modules$fast_xml_parser$src$validator");exports.parse=
function(xmlData,options,validationOption){if(validationOption&&(!0===validationOption&&(validationOption={}),validationOption=validator.validate(xmlData,validationOption),!0!==validationOption))throw Error(validationOption.err.msg);options=buildOptions(options,x2xmlnode.defaultOptions,x2xmlnode.props);xmlData=xmlToNodeobj.getTraversalObj(xmlData,options);return nodeToJson.convertToJson(xmlData,options)};exports.convertTonimn=require("module$node_modules$fast_xml_parser$src$nimndata").convert2nimn;
exports.getTraversalObj=xmlToNodeobj.getTraversalObj;exports.convertToJson=nodeToJson.convertToJson;exports.convertToJsonString=require("module$node_modules$fast_xml_parser$src$node2json_str").convertToJsonString;exports.validate=validator.validate;exports.j2xParser=require("module$node_modules$fast_xml_parser$src$json2xml");exports.parseToNimn=function(xmlData,schema,options){return exports.convertTonimn(exports.getTraversalObj(xmlData,options),schema,options)}}
//# sourceMappingURL=module$node_modules$fast_xml_parser$src$parser.js.map
