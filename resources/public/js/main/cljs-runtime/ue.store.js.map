{"version":3,"sources":["ue/store.cljs"],"mappings":"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","names":["ue.store/schema","js/ue","js/ue.store","js/ue.store.conn","ue.store/conn","datascript.core.create_conn","ue.store/init-db!","cljs.core.print","c__42881__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__42882__auto__","switch__40213__auto__","state_52076","state_val_52077","inst_52051","cljs.core.async.impl.ioc-helpers/take!","inst_52053","inst_52054","inst_52055","inst_52058","inst_52059","inst_52060","statearr-52078","statearr-52079","_","statearr-52080","cljs.core/cons","statearr-52081","inst_52071","statearr-52082","cljs.core/rest","statearr-52083","inst_52074","cljs.core.async.impl.ioc-helpers/return-chan","statearr-52085","inst_52062","inst_52063","temp__5753__auto__","e__39458__auto__","statearr-52086","statearr-52087","statearr-52088","ex52084","statearr-52089","statearr-52090","state-machine__40214__auto__","ret-value__40215__auto__","result__40216__auto__","cljs.core/keyword-identical?","ex__40217__auto__","e52091","statearr-52092","cljs.core/seq","statearr-52093","cljs.core/first","state__42883__auto__","statearr-52094","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs-http.client/get","ue.parser/parse-xmi","ue.data/*conn*","ue.data/prepare-db!"],"sourcesContent":["(ns ue.store\n  (:require\n    [cljs.core.async :refer [go <!]]\n    [cljs.core.async.interop :refer-macros [<p!]]\n    [cljs-http.client :as http]\n    [datascript.core :as d]\n    [ue.parser :as parser]\n    [ue.data :as db]))\n\n(def schema\n  {:owner {:db/valueType :db.type/ref}})\n\n(defonce conn (d/create-conn schema))\n\n(defn init-db! []\n  (print \"init db.\")\n  (go\n    (let [resp (<! (http/get \"assets/state.xmi\"))\n          body (:body resp)\n          js-data (parser/parse-xmi body)\n          ]\n      (binding [db/*conn* conn]\n        (db/prepare-db! js-data))\n      )))"]}