{
"version":3,
"file":"module$node_modules$fast_xml_parser$src$nimndata.js",
"lineCount":7,
"mappings":"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",
"sources":["node_modules/fast-xml-parser/src/nimndata.js"],
"sourcesContent":["shadow$provide[\"module$node_modules$fast_xml_parser$src$nimndata\"] = function(global,require,module,exports) {\n'use strict';\nconst char = function(a) {\n  return String.fromCharCode(a);\n};\n\nconst chars = {\n  nilChar: char(176),\n  missingChar: char(201),\n  nilPremitive: char(175),\n  missingPremitive: char(200),\n\n  emptyChar: char(178),\n  emptyValue: char(177), //empty Premitive\n\n  boundryChar: char(179),\n\n  objStart: char(198),\n  arrStart: char(204),\n  arrayEnd: char(185),\n};\n\nconst charsArr = [\n  chars.nilChar,\n  chars.nilPremitive,\n  chars.missingChar,\n  chars.missingPremitive,\n  chars.boundryChar,\n  chars.emptyChar,\n  chars.emptyValue,\n  chars.arrayEnd,\n  chars.objStart,\n  chars.arrStart,\n];\n\nconst _e = function(node, e_schema, options) {\n  if (typeof e_schema === 'string') {\n    //premitive\n    if (node && node[0] && node[0].val !== undefined) {\n      return getValue(node[0].val, e_schema);\n    } else {\n      return getValue(node, e_schema);\n    }\n  } else {\n    const hasValidData = hasData(node);\n    if (hasValidData === true) {\n      let str = '';\n      if (Array.isArray(e_schema)) {\n        //attributes can't be repeated. hence check in children tags only\n        str += chars.arrStart;\n        const itemSchema = e_schema[0];\n        //var itemSchemaType = itemSchema;\n        const arr_len = node.length;\n\n        if (typeof itemSchema === 'string') {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = getValue(node[arr_i].val, itemSchema);\n            str = processValue(str, r);\n          }\n        } else {\n          for (let arr_i = 0; arr_i < arr_len; arr_i++) {\n            const r = _e(node[arr_i], itemSchema, options);\n            str = processValue(str, r);\n          }\n        }\n        str += chars.arrayEnd; //indicates that next item is not array item\n      } else {\n        //object\n        str += chars.objStart;\n        const keys = Object.keys(e_schema);\n        if (Array.isArray(node)) {\n          node = node[0];\n        }\n        for (let i in keys) {\n          const key = keys[i];\n          //a property defined in schema can be present either in attrsMap or children tags\n          //options.textNodeName will not present in both maps, take it's value from val\n          //options.attrNodeName will be present in attrsMap\n          let r;\n          if (!options.ignoreAttributes && node.attrsMap && node.attrsMap[key]) {\n            r = _e(node.attrsMap[key], e_schema[key], options);\n          } else if (key === options.textNodeName) {\n            r = _e(node.val, e_schema[key], options);\n          } else {\n            r = _e(node.child[key], e_schema[key], options);\n          }\n          str = processValue(str, r);\n        }\n      }\n      return str;\n    } else {\n      return hasValidData;\n    }\n  }\n};\n\nconst getValue = function(a /*, type*/) {\n  switch (a) {\n    case undefined:\n      return chars.missingPremitive;\n    case null:\n      return chars.nilPremitive;\n    case '':\n      return chars.emptyValue;\n    default:\n      return a;\n  }\n};\n\nconst processValue = function(str, r) {\n  if (!isAppChar(r[0]) && !isAppChar(str[str.length - 1])) {\n    str += chars.boundryChar;\n  }\n  return str + r;\n};\n\nconst isAppChar = function(ch) {\n  return charsArr.indexOf(ch) !== -1;\n};\n\nfunction hasData(jObj) {\n  if (jObj === undefined) {\n    return chars.missingChar;\n  } else if (jObj === null) {\n    return chars.nilChar;\n  } else if (\n    jObj.child &&\n    Object.keys(jObj.child).length === 0 &&\n    (!jObj.attrsMap || Object.keys(jObj.attrsMap).length === 0)\n  ) {\n    return chars.emptyChar;\n  } else {\n    return true;\n  }\n}\n\nconst x2j = require('./xmlstr2xmlnode');\nconst buildOptions = require('./util').buildOptions;\n\nconst convert2nimn = function(node, e_schema, options) {\n  options = buildOptions(options, x2j.defaultOptions, x2j.props);\n  return _e(node, e_schema, options);\n};\n\nexports.convert2nimn = convert2nimn;\n\n};"],
"names":["shadow$provide","global","require","module","exports","String","fromCharCode","a","charsArr","nilChar","nilPremitive","missingChar","missingPremitive","boundryChar","emptyChar","emptyValue","arrayEnd","objStart","arrStart","_e","node","e_schema","options","undefined","val","getValue","jObj","child","Object","keys","length","attrsMap","hasValidData","str","Array","isArray","itemSchema","arr_len","arr_i","r","processValue","i","key","ignoreAttributes","textNodeName","indexOf","ch","x2j","buildOptions","convert2nimn","defaultOptions","props"]
}
